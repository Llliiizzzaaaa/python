{"ast":null,"code":"var _jsxFileName = \"A:\\\\sasha\\\\YandexDisk\\\\\\u041C\\u0413\\u0422\\u0423\\\\7-\\u0439 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\\\u0420\\u0418\\u041F\\\\\\u041B\\u0420\\\\JS\\\\lab8\\\\src\\\\pages\\\\langs\\\\Langs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useWindowSize from \"../../utils/useWindowSize\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport LangCard from \"../../components/card/LangCard\";\nimport { getFromServer } from \"../../utils/getFromServer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst Langs = () => {\n  _s();\n\n  const [langs, setLangs] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const loadLangs = async () => {\n    const results = await getFromServer('http://127.0.0.1:8000/Proglang/');\n    await setLangs(results);\n    await setIsLoaded(true);\n    document.getElementById(\"loadButton\").hidden = true;\n  };\n\n  const {\n    width\n  } = useWindowSize();\n  const isMobile = width && width <= 600;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column container justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5\",\n      id: \"loadButton\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: loadLangs,\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u044F\\u0437\\u044B\\u043A\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: isMobile ? 1 : 3,\n        className: \"g-3\",\n        children: isLoaded ? langs.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_createElement(LangCard, { ...item,\n              key: index,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 29\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 32\n          }, this);\n        }) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Langs, \"8JDZ6jF3qXO76H7bXcfW5FCv8ow=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = Langs;\nexport default Langs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Langs\");","map":{"version":3,"sources":["A:/sasha/YandexDisk/МГТУ/7-й семестр/РИП/ЛР/JS/lab8/src/pages/langs/Langs.jsx"],"names":["React","useState","useWindowSize","Button","Col","Row","LangCard","getFromServer","Langs","langs","setLangs","isLoaded","setIsLoaded","loadLangs","results","document","getElementById","hidden","width","isMobile","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,GAArB,QAA+B,iBAA/B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMY,SAAS,GAAG,YAAY;AAC1B,UAAMC,OAAO,GAAG,MAAMP,aAAa,CAAC,iCAAD,CAAnC;AACA,UAAMG,QAAQ,CAACI,OAAD,CAAd;AACA,UAAMF,WAAW,CAAC,IAAD,CAAjB;AACAG,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,MAAtC,GAA+C,IAA/C;AACH,GALD;;AAOA,QAAM;AAACC,IAAAA;AAAD,MAAUhB,aAAa,EAA7B;AACA,QAAMiB,QAAQ,GAAGD,KAAK,IAAIA,KAAK,IAAI,GAAnC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,qDAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,YAAxB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEL,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAEM,QAAQ,GAAG,CAAH,GAAO,CAA/B;AAAkC,QAAA,SAAS,EAAC,KAA5C;AAAA,kBACKR,QAAQ,GAAGF,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACnC,8BAAO,QAAC,GAAD;AAAA,mCACH,eAAC,QAAD,OAAcD,IAAd;AAAoB,cAAA,GAAG,EAAEC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGH,SAJW,CAAH,GAIJ;AALT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/BD;;GAAMd,K;UAYcN,a;;;KAZdM,K;AAiCN,eAAeA,KAAf","sourcesContent":["import React, {useState} from 'react';\nimport useWindowSize from \"../../utils/useWindowSize\";\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport LangCard from \"../../components/card/LangCard\";\nimport {getFromServer} from \"../../utils/getFromServer\";\n\nconst Langs = () => {\n\n    const [langs, setLangs] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const loadLangs = async () => {\n        const results = await getFromServer('http://127.0.0.1:8000/Proglang/');\n        await setLangs(results);\n        await setIsLoaded(true);\n        document.getElementById(\"loadButton\").hidden = true;\n    }\n\n    const {width} = useWindowSize();\n    const isMobile = width && width <= 600;\n\n    return (\n        <div className=\"d-flex flex-column container justify-content-center\">\n            <div className=\"m-5\" id=\"loadButton\">\n                <Button onClick={loadLangs}>Загрузить список языков</Button>\n            </div>\n            <div className=\"mb-5\">\n                <Row xs={1} md={isMobile ? 1 : 3} className=\"g-3\">\n                    {isLoaded ? langs.map((item, index) => {\n                        return <Col>\n                            <LangCard {...item} key={index}/>\n                        </Col>\n                    }) : ''}\n                </Row>\n            </div>\n        </div>\n    );\n};\n\nexport default Langs;"]},"metadata":{},"sourceType":"module"}